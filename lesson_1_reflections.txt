How did viewing a diff between two versions of a file help you see the bug that was introduced?

First of all I learned about fc command.
By viewing only the differences it's easier to 
spot the error than by comparing thousands of
lines manually.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

I can have some ready versions to use in any circumstances.
Or compare them to chose the final version. 
Or see in a view what to reject next time.

What do you think are the pros and cons of manually choosing when to create a commit, 
like you do in Git, vs having versions automatically saved, like Google Docs does?

You can choose the point to commit when it seems logical to you and has a meaning for the version.
On the other hand you may skip critical versions by mistake or commit too often overestimating
the importance of a trivial change.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, 
like Google Docs, treat each file separately?

Files may be interconnected (.html and .css for instance) and saving multiple files is a
great feature which allows full control of a programmer's job.

How can you use the commands git log and git diff to view the history of files?

With -log- I can see the different versions saved and then with -diff- I can choose
two of them and see the differences between them.

How might using version control make you more confident to make changes that could break something?

Much more confident at experimenting cause now I know how to return to a previous working state.

Now that you have your workspace set up, what do you want to try using Git for?

For my next projects learning web development.